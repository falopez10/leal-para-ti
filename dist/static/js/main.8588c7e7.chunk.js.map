{"version":3,"sources":["NavBar.js","Historial.js","App.js","serviceWorker.js","index.js"],"names":["CONFIG","require","NavBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showLoginModal","inpEmail","inpPassword","handleLoginNavClick","bind","assertThisInitialized","handleLoginClose","handleLogin","handleLogOutClick","renderLogButton","inherits","createClass","key","value","setState","setUser","user","password","_this2","url","BASE_API_USER_URL","LOGIN_URL","body","JSON","stringify","email","myHeaders","Headers","append","fetch","method","headers","then","response","json","catch","error","Swal","resource","code","type","title","firstName","showConfirmButton","timer","token","_this3","react_default","a","createElement","Modal","show","Header","Title","Body","name","className","autoComplete","onChange","evt","target","ref","input","inputPassword","Footer","Button","bsStyle","onClick","logged","NavItem","eventKey","Navbar","fixedTop","inverse","Brand","href","Toggle","Collapse","Nav","NavDropdown","id","MenuItem","divider","Component","moment","Historial","transactions","showDetailModal","currentTransaction","startDateValue","endDateValue","types","fetchTransactions","handleTransactionClick","handleClose","handleStartDateChange","handleEndDateChange","handleCheckBoxChange","URL","TRANSACTIONS_URL","formatted_token","startDate","format","endDate","console","log","params","keys","forEach","searchParams","text","data","filter","tran","includes","transaction","msg","dist_default","createdDate","points","num","length","ListGroup","map","index","typeVerb","ListGroupItem","header","withTitle","Row","Col","sm","md","entry_default","ButtonToolbar","ToggleButtonGroup","ToggleButton","renderFilters","renderTransactionsList","showTransactionDetail","App","renderMainComp","renderLoggedComp","renderNotLoggedComp","lastName","src_Historial","main","src_NavBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8588c7e7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, MenuItem, Modal, Navbar, Nav, NavItem, NavDropdown } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst CONFIG = require(\"./assets/config/config.json\");\r\n\r\nexport class NavBar extends Component {\r\n\t//Add conditional: There's one navbar for logged, and other for not logged\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tshowLoginModal:false,\r\n\t\t\tinpEmail:\"\",\r\n\t\t\tinpPassword:\"\"\r\n\t\t}\r\n\r\n\r\n\t\tthis.handleLoginNavClick = this.handleLoginNavClick.bind(this);\r\n\t\tthis.handleLoginClose = this.handleLoginClose.bind(this);\r\n\t\tthis.handleLogin = this.handleLogin.bind(this);\r\n\t\tthis.handleLogOutClick = this.handleLogOutClick.bind(this);\r\n\t\tthis.renderLogButton = this.renderLogButton.bind(this);\r\n\t}\r\n\r\n\t/*componentDidMount() {\r\n\t\tthis.inputPassword.addEventListener(\"keyup\", function(event) {\r\n\t\t  event.preventDefault();\r\n\t\t  // Enter\r\n\t\t  if (event.keyCode === 13)\tthis.handleLogin();\r\n\t\t}); \r\n\t}*/\r\n\r\n\t// Click on nav for login. Show Modal-form\r\n\thandleLoginNavClick(){\r\n\r\n\t\tthis.setState({\r\n\t\t\tshowLoginModal:true\r\n\t\t});\r\n\t}\r\n\thandleLogOutClick(){\r\n\t\tthis.props.setUser( {}, \"\", false);\r\n\t}\r\n\r\n\t//Close Login Modal.\r\n\thandleLoginClose(){\r\n\t\tthis.setState({\r\n\t\t\tshowLoginModal:false\r\n\t\t});\r\n\t}\r\n\r\n\t//Actually makes the request.\r\n\thandleLogin(user, password){\r\n\t\tconst url = CONFIG.BASE_API_USER_URL + CONFIG.LOGIN_URL;\r\n\t\tlet body = JSON.stringify({\"email\":this.state.inpEmail, \"password\":this.state.inpPassword});\r\n\t\tlet myHeaders = new Headers();\r\n\t\tmyHeaders.append(\"Content-type\", \"application/json\");\r\n\r\n\t\tfetch(url,{\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: myHeaders,\r\n\t\t\tbody: body\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t    \treturn response.json()\r\n\t    })\r\n\t    .catch(error => \r\n\t    \tSwal(\"Error\", \"Hubo un error en el sistema: \"+error+\". Por favor intenta de nuevo.\", \"error\")\r\n\t    )\r\n\t    .then((resource) => {\r\n\t    \t// 100: OK. 101: Invalid email/pass. 102: Error in process. 130: Missing field\r\n\t    \tif(resource.code === 100){\r\n\t    \t\tSwal({\r\n\t\t\t\t\t  type: 'success',\r\n\t\t\t\t\t  title: \"Bienvenido, \" + resource.user.firstName,\r\n\t\t\t\t\t  showConfirmButton: true,\r\n\t\t\t\t\t  timer: 2500\r\n\t\t\t\t\t});\r\n\t    \t\tthis.props.setUser(resource.user, resource.token, true);\r\n\t    \t\tthis.setState({showLoginModal:false});\r\n\t    \t}\r\n\t    \telse if(resource.code === 101)\r\n\t    \t\tSwal(\"Email no válido\", \"Tu email y contraseña no coinciden :(\", \"error\");\r\n\t    \telse\r\n\t    \t\tSwal(\"Error\", \"Hubo un error en el sistema. Por favor intenta de nuevo.\", \"error\");\r\n\r\n\t    })\r\n\t}\r\n\r\n\tshowLoginModal(){\r\n\t\treturn (\r\n\t\t\t<Modal show={this.state.showLoginModal}>\r\n\t\t\t  <Modal.Header>\r\n          <Modal.Title>Ingresar a Leal</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h3>Ingresa tu correo y contraseña</h3>\r\n          <input type=\"hidden\" name=\"_token\" value=\"\" />\r\n          <div className=\"form-group\">\r\n              <label className=\"control-label\">E-Mail</label>\r\n              <div>\r\n                  <input \r\n\t                  type=\"email\" autoComplete=\"on\"\r\n\t                  className=\"form-control input-lg\" \r\n\t                  name=\"email\"\r\n\t                  onChange={evt => this.setState({inpEmail:evt.target.value}) }\r\n                  />\r\n              </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label className=\"control-label\">Contraseña</label>\r\n              <div>\r\n                  <input ref={input => this.inputPassword=input }  type=\"password\" className=\"form-control input-lg\" name=\"password\" onChange={evt=>this.setState({inpPassword:evt.target.value})}\r\n                  />\r\n              </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button bsStyle=\"primary\" onClick={this.handleLogin}>Ingresar</Button>\r\n          <Button bsStyle=\"danger\" onClick={this.handleLoginClose}>Cancelar</Button>\r\n        </Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n\r\n\trenderLogButton(){\r\n\t\tif(!this.props.logged)\r\n\t\t\treturn <NavItem eventKey={1} onClick={this.handleLoginNavClick}> Ingresar</NavItem>;\r\n\t\telse\r\n\t\t\treturn <NavItem eventKey={1} onClick={this.handleLogOutClick}> Salir</NavItem>;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar className=\"NavBar\" fixedTop inverse >\r\n\t\t\t\t  <Navbar.Header>\r\n\t\t\t\t    <Navbar.Brand>\r\n\t\t\t\t      <a href=\"#home\">Leal para ti</a>\r\n\t\t\t\t    </Navbar.Brand>\r\n\t\t\t\t    <Navbar.Toggle />\r\n\t\t\t\t  </Navbar.Header>\r\n\t\t\t\t  <Navbar.Collapse>\r\n\t\t\t\t\t  <Nav>\r\n\t\t\t\t\t    {this.renderLogButton()}\r\n\t\t\t\t\t    <NavDropdown eventKey={2} title=\"Sobre Leal\" id=\"basic-nav-dropdown\">\r\n\t\t\t\t\t      <MenuItem eventKey={2.1} href=\"https://www.puntosleal.com/\">Puntos Leal</MenuItem>\r\n\t\t\t\t\t      <MenuItem divider />\r\n\t\t\t\t\t      <MenuItem eventKey={2.2} href=\"https://play.google.com/store/apps/details?id=com.kubo.leal&hl=es_419\">Play Store</MenuItem>\r\n\t\t\t\t\t      <MenuItem eventKey={2.2} href=\"https://itunes.apple.com/co/app/leal/id1083234969?mt=8\">App Store</MenuItem>\r\n\t\t\t\t\t    </NavDropdown>\r\n\t\t\t\t\t  </Nav>\r\n\t\t\t\t  </Navbar.Collapse>\r\n\t\t\t\t</Navbar>\r\n\r\n\t\t\t\t{/*Show modal to process login request*/}\r\n\t\t\t\t{this.showLoginModal()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport Moment from \"react-moment\";\r\nimport { Button, ButtonToolbar, Col, ListGroup, ListGroupItem, Modal, Row, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport \"moment/locale/es\";\r\nimport DatePicker from \"react-date-picker\";\r\nlet moment = require(\"moment\");\r\nconst CONFIG = require(\"./assets/config/config.json\");\r\n\r\nexport class Historial extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\ttransactions:[],\r\n\t\t\tshowDetailModal:false,\r\n\t\t\tcurrentTransaction:{},\r\n\t\t\tstartDateValue:\"\",\r\n\t\t\tendDateValue:\"\",\r\n\t\t\ttypes:[\"earn\",\"redeem\"]\r\n\t\t};\r\n\r\n\t\tthis.fetchTransactions = this.fetchTransactions.bind(this);\r\n\t\tthis.handleTransactionClick = this.handleTransactionClick.bind(this);\r\n\t\tthis.handleClose = this.handleClose.bind(this);\r\n\t\tthis.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n\t\tthis.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n\t\tthis.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchTransactions();\r\n\t}\r\n\r\n\t//Fetch transactions with filter, type stands for redeem/earn\r\n\tfetchTransactions(){\r\n\t\tlet url = new URL(CONFIG.BASE_API_USER_URL + CONFIG.TRANSACTIONS_URL);\r\n\t\tlet formatted_token = \"Bearer \" + this.props.token;\r\n\r\n\t\tlet myHeaders = new Headers();\r\n\t\tmyHeaders.append(\"Content-type\", \"application/json\");\r\n\t\tmyHeaders.append(\"Authorization\", formatted_token);\r\n\r\n\t\t//Query params\r\n\t\tlet startDate = moment(this.state.startDateValue, \"YYYY-MM-DD\").format();\r\n\t\tlet endDate = moment(this.state.endDateValue, \"YYYY-MM-DD\").format();\r\n\t\tconsole.log(\"dates: \",startDate,endDate,\"types: \",this.state.types);\r\n\t\tif ( startDate !==\"Invalid date\" && endDate !== \"Invalid date\"){\r\n\t\t\tlet params = {startDate, endDate};\r\n\t\t\tObject.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\t\t}\r\n\r\n\t\tfetch(url,{\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: myHeaders\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t    \treturn response.json()\r\n\t    })\r\n\t    .catch(error => {\r\n\t    \tSwal({\r\n\t    \t\ttype:\"error\",\r\n\t    \t\ttitle:\"Hubo un error en el sistema\",\r\n\t    \t\ttext: \"Por favor intenta de nuevo\"\r\n\t    \t});\r\n\t    }\r\n\t    )\r\n\t    .then((resource) => {\r\n\t    \t// code=100: OK.\r\n\t    \tconsole.log(\"response:\",resource);\r\n\t    \tlet transactions = resource.data.filter(tran=>{\r\n\t    \t\treturn this.state.types.includes(tran.type);\r\n\t    \t});\r\n\t    \tif ( startDate !==\"Invalid date\" && endDate !== \"Invalid date\") Swal({\r\n\t\t\t\t\t  type: 'success',\r\n\t\t\t\t\t  title: \"Se han consultado tus transacciones exitosamente\",\r\n\t\t\t\t\t  showConfirmButton: false,\r\n\t\t\t\t\t  timer: 1500\r\n\t\t\t\t\t});\r\n\t    \tthis.setState({\r\n\t    \t\ttransactions\r\n\t    \t});\r\n\t    })\r\n\t}\r\n\r\n\thandleTransactionClick(transaction){\r\n\t\tthis.setState({\r\n\t\t\tshowDetailModal:true,\r\n\t\t\tcurrentTransaction:transaction\r\n\t\t});\r\n\t}\r\n\thandleClose(){\r\n\t\tthis.setState({\r\n\t\t\tshowDetailModal:false\r\n\t\t});\r\n\t}\r\n\thandleStartDateChange(startDateValue){\r\n\t\tthis.setState({\r\n\t\t\tstartDateValue\r\n\t\t});\r\n\t}\r\n\thandleEndDateChange(endDateValue){\r\n\t\tthis.setState({\r\n\t\t\tendDateValue\r\n\t\t});\r\n\t}\r\n\r\n\thandleCheckBoxChange(types){\r\n\t\tthis.setState({\r\n\t\t\ttypes\r\n\t\t});\r\n\t}\r\n\r\n\tshowTransactionDetail(){\r\n\t\tlet currentTransaction = this.state.currentTransaction;\r\n\t\tlet msg = <br/>\r\n\t\tif(!currentTransaction) return ;\r\n\t\tif(currentTransaction.type===\"redeem\"){\r\n  \t\tmsg = (<div>\r\n  \t\t\t<h3>El <Moment format=\"D MMM YYYY\">{currentTransaction.createdDate}</Moment> redimiste {currentTransaction.points} puntos. </h3>\r\n  \t\t\t<br/>\r\n  \t\t\t<br/>\r\n  \t\t\t<h4>¡Gracias por preferirnos!</h4>\r\n  \t\t</div>);\r\n  \t}\r\n  \telse if(currentTransaction.type===\"earn\"){\r\n  \t\tmsg = (<div>\r\n  \t\t\t<h3>El <Moment format=\"D MMM YYYY\">{currentTransaction.createdDate}</Moment> ganaste {currentTransaction.points} puntos. </h3>\r\n  \t\t\t<h4>Los ganaste tras una compra por un valor de ${currentTransaction.value}.</h4>\r\n  \t\t\t<br/>\r\n  \t\t\t<h4>¡Gracias por preferirnos!</h4>\r\n  \t\t</div>);\t\r\n  \t}\r\n\r\n\t\treturn (\r\n\t\t\t<Modal show={this.state.showDetailModal}>\r\n\t\t\t  <Modal.Header>\r\n          <Modal.Title>Detalle de transaccion {currentTransaction.num} </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        { msg }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button bsStyle=\"info\" onClick={this.handleClose}>Cerrar</Button>\r\n        </Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n\r\n\trenderTransactionsList(){\r\n\t\tif(this.state.transactions.length === 0)\r\n\t\t\treturn (<p> No tienes transacciones en Leal</p>)\r\n\t\telse{\r\n\t\t\treturn (<ListGroup>\r\n\t\t\t\t{this.state.transactions.map((tran, index)=>{\r\n\t\t\t\t\ttran.num = index+1;\r\n\t\t\t\t\tlet typeVerb = \"ganados\";\r\n\t\t\t\t\tif(tran.type === \"redeem\") typeVerb = \"redimidos\";\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ListGroupItem key={tran.num} onClick={()=>this.handleTransactionClick(tran)}\r\n\t\t\t\t\t\theader={<h4><Moment format=\"D MMM YYYY\" withTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tran.createdDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment></h4>}>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<b>{tran.points}</b> puntos {typeVerb}\r\n\t\t\t\t\t\t</ListGroupItem>);\r\n\t\t\t\t})}\r\n\t\t\t</ListGroup>)\r\n\t\t}\r\n\t}\r\n\trenderFilters(){\r\n\t\treturn(\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm={3} md={3}>\r\n\t\t\t\t\t<h4>Fecha inicial</h4>\r\n\t\t\t\t\t<DatePicker \r\n\t\t\t\t\t\tref=\"start-datepicker\" \r\n\t\t\t\t\t\tvalue={this.state.startDateValue} \r\n\t\t\t\t\t\tonChange={this.handleStartDateChange} />\t\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={3} md={3}>\r\n\t\t\t\t\t<h4>Fecha Final</h4>\r\n\t\t\t\t\t<DatePicker \r\n\t\t\t\t\t\tref=\"end-datepicker\" \r\n\t\t\t\t\t\tvalue={this.state.endDateValue} \r\n\t\t\t\t\t\tonChange={this.handleEndDateChange} />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={3} md={3}>\r\n\t\t\t\t<h4>Tipo de transacción</h4>\r\n\t\t\t\t<ButtonToolbar>\r\n\t\t\t    <ToggleButtonGroup type=\"checkbox\" \r\n\t\t\t    \tvalue={this.state.types}\r\n\t\t\t    \tonChange={this.handleCheckBoxChange}>\r\n\t\t\t      <ToggleButton value={\"redeem\"}>Puntos redimidos</ToggleButton>\r\n\t\t\t      <ToggleButton value={\"earn\"}>Puntos ganados   </ToggleButton>\r\n\t\t\t    </ToggleButtonGroup>\r\n\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<Button sm={3} md={3}\r\n\t\t\t\t\tbsStyle=\"primary\"\r\n\t\t\t\t\tonClick={this.fetchTransactions}>\r\n\t\t\t\t\tFiltrar\r\n\t\t\t\t</Button>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3>¡Mira y filtra tus transacciones por fecha y tipo!</h3>\r\n\t\t\t\t{this.renderFilters()}\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.renderTransactionsList()}\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.showTransactionDetail()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Historial;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar.js\";\nimport Historial from \"./Historial.js\";\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n      logged:false,\n      token:\"\",\n      user:{}\n    }\n\n    this.renderMainComp = this.renderMainComp.bind(this);\n    this.renderLoggedComp = this.renderLoggedComp.bind(this);\n    this.renderNotLoggedComp = this.renderNotLoggedComp.bind(this);\n  }\n\n  setUser(user, token, logged){\n    this.setState({\n      user,\n      token,\n      logged\n    });\n  }\n\n  renderLoggedComp(){\n    let user = this.state.user;\n      return (<div>\n        <div className=\"App-header\">\n        <h1> </h1>\n          <h1>Leal para ti</h1>\n          <h2> Bienvenido, {user.firstName} {user.lastName} </h2>\n        </div>\n        <Historial className=\"App-body\" token={this.state.token} user={user}/>\n      </div>);\n  }\n\n  renderNotLoggedComp(){\n      return <div>\n        <div className=\"App-header\">\n          <h1> </h1>\n          <h1>Leal para ti</h1>\n          <h2 >Bienvenido a Leal</h2>\n        </div>\n        <div className=\"App-body\">\n        <br/>\n          <h4>Ingresa para observar el historial de tus transacciones en la plataforma</h4>\n        </div>\n      </div>;\n  }\n\n  renderMainComp(){\n    if(this.state.logged)\n      return this.renderLoggedComp();\n    else\n      return this.renderNotLoggedComp();\n  }\n\n  render() {\n    let main = this.renderMainComp();\n\n    return (\n      <div className=\"App\">\n        <NavBar \n          logged={this.state.logged}\n          setUser={this.setUser.bind(this)}\n        />\n        <div>{main}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}